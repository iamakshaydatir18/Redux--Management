{"ast":null,"code":"//Using redux-toolkit\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialCounterState = {\n  counter: 0,\n  showToggle: true\n};\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toogleCounter(state) {\n      state.showToggle = !state.showToggle;\n    }\n  }\n});\n\n//for actions\nexport const counterActions = counterSlice.actions;\n\n//to store state\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer\n  }\n});\nexport default store;\n\n//Using redux code -->\n\n/*\nimport { createStore } from 'redux';\n\nconst reducerFunction = (state= { counter : 0, hidden : true },action) => {\n\n    if(action.type === 'increment'){\n\n        return {\n            counter : state.counter + 1,\n            hidden : state.hidden\n        }\n    }\n\n    if(action.type === 'decrement'){\n\n        return {\n            counter : state.counter - 1,\n            hidden : state.hidden\n        }\n    }\n\n    if(action.type === 'increase'){\n        return {\n            counter :state.counter + action.amount,\n            hidden : state.hidden\n        }\n    }\n\n    if(action.type === 'toggleCounter'){\n\n        return{\n            counter :state.counter ,\n            hidden : !state.hidden\n           \n        }\n    }\n\n    return state;\n}\n\nconst store = createStore(reducerFunction);\n\n\nexport default store;\n\n*/","map":{"version":3,"names":["createSlice","configureStore","initialCounterState","counter","showToggle","initialAuthState","isAuthenticated","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toogleCounter","counterActions","actions","store","reducer"],"sources":["/Users/akshaydatir/Desktop/Web - Devlopment/ReactJs/RectApp/Teaching/Redux/01-starting-project-01/src/store/index.js"],"sourcesContent":["\n//Using redux-toolkit\nimport { createSlice , configureStore } from '@reduxjs/toolkit';\n\nconst initialCounterState = { counter:0, showToggle:true};\nconst initialAuthState= { isAuthenticated: false };\n\n\n\nconst counterSlice = createSlice({\n\n    name : 'counter',\n    initialState :initialCounterState,\n    reducers:{\n        increment(state){\n            state.counter++;\n        },\n        decrement(state){\n            state.counter--;\n        },\n        increase(state,action){\n            state.counter = state.counter + action.payload\n        },\n        toogleCounter(state){\n            state.showToggle =  !state.showToggle\n        }\n    }\n});\n\n//for actions\nexport const counterActions = counterSlice.actions;\n\n\n//to store state\nconst store = configureStore({\n    reducer:{ counter : counterSlice.reducer}\n});\nexport default store;\n\n\n//Using redux code -->\n\n/*\nimport { createStore } from 'redux';\n\nconst reducerFunction = (state= { counter : 0, hidden : true },action) => {\n\n    if(action.type === 'increment'){\n\n        return {\n            counter : state.counter + 1,\n            hidden : state.hidden\n        }\n    }\n\n    if(action.type === 'decrement'){\n\n        return {\n            counter : state.counter - 1,\n            hidden : state.hidden\n        }\n    }\n\n    if(action.type === 'increase'){\n        return {\n            counter :state.counter + action.amount,\n            hidden : state.hidden\n        }\n    }\n\n    if(action.type === 'toggleCounter'){\n\n        return{\n            counter :state.counter ,\n            hidden : !state.hidden\n           \n        }\n    }\n\n    return state;\n}\n\nconst store = createStore(reducerFunction);\n\n\nexport default store;\n\n*/"],"mappings":"AACA;AACA,SAASA,WAAW,EAAGC,cAAc,QAAQ,kBAAkB;AAE/D,MAAMC,mBAAmB,GAAG;EAAEC,OAAO,EAAC,CAAC;EAAEC,UAAU,EAAC;AAAI,CAAC;AACzD,MAAMC,gBAAgB,GAAE;EAAEC,eAAe,EAAE;AAAM,CAAC;AAIlD,MAAMC,YAAY,GAAGP,WAAW,CAAC;EAE7BQ,IAAI,EAAG,SAAS;EAChBC,YAAY,EAAEP,mBAAmB;EACjCQ,QAAQ,EAAC;IACLC,SAASA,CAACC,KAAK,EAAC;MACZA,KAAK,CAACT,OAAO,EAAE;IACnB,CAAC;IACDU,SAASA,CAACD,KAAK,EAAC;MACZA,KAAK,CAACT,OAAO,EAAE;IACnB,CAAC;IACDW,QAAQA,CAACF,KAAK,EAACG,MAAM,EAAC;MAClBH,KAAK,CAACT,OAAO,GAAGS,KAAK,CAACT,OAAO,GAAGY,MAAM,CAACC,OAAO;IAClD,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAC;MAChBA,KAAK,CAACR,UAAU,GAAI,CAACQ,KAAK,CAACR,UAAU;IACzC;EACJ;AACJ,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMc,cAAc,GAAGX,YAAY,CAACY,OAAO;;AAGlD;AACA,MAAMC,KAAK,GAAGnB,cAAc,CAAC;EACzBoB,OAAO,EAAC;IAAElB,OAAO,EAAGI,YAAY,CAACc;EAAO;AAC5C,CAAC,CAAC;AACF,eAAeD,KAAK;;AAGpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}