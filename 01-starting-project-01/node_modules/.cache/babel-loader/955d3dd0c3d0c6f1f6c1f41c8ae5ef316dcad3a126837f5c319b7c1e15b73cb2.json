{"ast":null,"code":"//Using redux-toolkit\nimport { createSlice, useConfigureStore } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showToggle: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n    toogleCounter(state) {\n      state.showToggle = !state.showToggle;\n    }\n  }\n});\nconst store = useConfigureStore(counterSlice.reducer);\n\n//Using redux code -->\n\n/*\nimport { createStore } from 'redux';\n\nconst reducerFunction = (state= { counter : 0, hidden : true },action) => {\n\n    if(action.type === 'increment'){\n\n        return {\n            counter : state.counter + 1,\n            hidden : state.hidden\n        }\n    }\n\n    if(action.type === 'decrement'){\n\n        return {\n            counter : state.counter - 1,\n            hidden : state.hidden\n        }\n    }\n\n    if(action.type === 'increase'){\n        return {\n            counter :state.counter + action.amount,\n            hidden : state.hidden\n        }\n    }\n\n    if(action.type === 'toggleCounter'){\n\n        return{\n            counter :state.counter ,\n            hidden : !state.hidden\n           \n        }\n    }\n\n    return state;\n}\n\nconst store = createStore(reducerFunction);\n\n\nexport default store;\n\n*/","map":{"version":3,"names":["createSlice","useConfigureStore","initialState","counter","showToggle","counterSlice","name","reducers","increment","state","decrement","increase","action","amount","toogleCounter","store","reducer"],"sources":["/Users/akshaydatir/Desktop/Web - Devlopment/ReactJs/RectApp/Teaching/Redux/01-starting-project-01/src/store/index.js"],"sourcesContent":["\n//Using redux-toolkit\nimport { createSlice , useConfigureStore } from '@reduxjs/toolkit';\n\nconst initialState = { counter:0, showToggle:true}\n\nconst counterSlice = createSlice({\n\n    name : 'counter',\n    initialState,\n    reducers:{\n\n        increment(state){\n            state.counter++;\n        },\n        decrement(state){\n            state.counter--;\n        },\n        increase(state,action){\n            state.counter = state.counter + action.amount\n        },\n        toogleCounter(state){\n            state.showToggle =  !state.showToggle\n        }\n    }\n});\n\nconst store = useConfigureStore(counterSlice.reducer);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//Using redux code -->\n\n/*\nimport { createStore } from 'redux';\n\nconst reducerFunction = (state= { counter : 0, hidden : true },action) => {\n\n    if(action.type === 'increment'){\n\n        return {\n            counter : state.counter + 1,\n            hidden : state.hidden\n        }\n    }\n\n    if(action.type === 'decrement'){\n\n        return {\n            counter : state.counter - 1,\n            hidden : state.hidden\n        }\n    }\n\n    if(action.type === 'increase'){\n        return {\n            counter :state.counter + action.amount,\n            hidden : state.hidden\n        }\n    }\n\n    if(action.type === 'toggleCounter'){\n\n        return{\n            counter :state.counter ,\n            hidden : !state.hidden\n           \n        }\n    }\n\n    return state;\n}\n\nconst store = createStore(reducerFunction);\n\n\nexport default store;\n\n*/"],"mappings":"AACA;AACA,SAASA,WAAW,EAAGC,iBAAiB,QAAQ,kBAAkB;AAElE,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAC,CAAC;EAAEC,UAAU,EAAC;AAAI,CAAC;AAElD,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAE7BM,IAAI,EAAG,SAAS;EAChBJ,YAAY;EACZK,QAAQ,EAAC;IAELC,SAASA,CAACC,KAAK,EAAC;MACZA,KAAK,CAACN,OAAO,EAAE;IACnB,CAAC;IACDO,SAASA,CAACD,KAAK,EAAC;MACZA,KAAK,CAACN,OAAO,EAAE;IACnB,CAAC;IACDQ,QAAQA,CAACF,KAAK,EAACG,MAAM,EAAC;MAClBH,KAAK,CAACN,OAAO,GAAGM,KAAK,CAACN,OAAO,GAAGS,MAAM,CAACC,MAAM;IACjD,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAC;MAChBA,KAAK,CAACL,UAAU,GAAI,CAACK,KAAK,CAACL,UAAU;IACzC;EACJ;AACJ,CAAC,CAAC;AAEF,MAAMW,KAAK,GAAGd,iBAAiB,CAACI,YAAY,CAACW,OAAO,CAAC;;AA2BrD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}